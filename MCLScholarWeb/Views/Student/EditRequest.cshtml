@model MCLScholarWeb.Models.Entity.ValidationRequest

@{
    ViewBag.Title = "EditRequest";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<style>
    #s-validation-request-status{
        font-weight:bold;
    }
</style>

<div class="container">
    @try
    {
        if (ViewBag.errorMessage != null)
        {

            <div class="row">

                <div class="col-md-12 shadow p-3 bg-white rounded">

                    <p class="text-danger p-3">@ViewBag.errorMessage</p>

                </div>

            </div>

        }

    }
    catch (Exception e) { }

    @if (Model.ValidationStatu.StatusName.ToLower() == "approved" || Model.ValidationStatu.StatusName.ToLower() == "declined")
    {
        <h1 class="display-4 mt-4 mb-5">View Request</h1>
    }
    else
    {
        <h1 class="display-4 mt-4 mb-5">Edit Request</h1>
    }

    @if (Model != null)
    {
        using (Html.BeginForm("EditRequest", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(model => model.RequestID)
            @Html.HiddenFor(model => model.UserID)
            @Html.HiddenFor(model => model.DateFilled)
            @Html.HiddenFor(model => model.PeriodID)
            @Html.HiddenFor(model => model.ScholarshipID)
            @Html.HiddenFor(model => model.Processed)
            @Html.HiddenFor(model => model.StatusID)
            @Html.HiddenFor(model => model.Remarks)

            if (!(Model.ValidationStatu.StatusName.ToLower() == "approved" || Model.ValidationStatu.StatusName.ToLower() == "declined"))
            {
                <div class="form-group p-5 shadow p-3 bg-white rounded">
                    <div class="row mb-3">
                        <div class="col-md-12">
                            <p class="form-control-label ml-4 mb-4">Upload New Requirements</p>
                            <input type="file" name="documents" multiple="multiple" class="col-md-12 mb-3" accept="application/pdf" />
                        </div>
                    </div>

                    <div class="ml-1 row">
                        <div class="col-md-10">
                            <input type="submit" value="Save" class="col-md-4 btn btn-success btn-block" />
                        </div>
                    </div>
                </div>
            }

            if (Model.RequestResources != null)
            {
                <div class=" form-group p-3 shadow p-5 rounded">

                    <p class="">Requirements Uploaded</p>
                    @{
                        var resources = Model.RequestResources;
                    }

                    <div class="row">
                        @foreach (var resource in resources)
                        {
                            var locStorage = resource.FileLocationStorage;

                            <div class="col-md-6 mb-4">
                                <div class="card shadow p-3 mb-3 rounded">
                                    <div class="card-body p-3">
                                        <a href="@locStorage.FileLocation" class="btn btn-info  btn-block mb-2" target="_blank">@locStorage.FileName</a>
                                        
                                        @if (!(Model.ValidationStatu.StatusName.ToLower() == "approved" || Model.ValidationStatu.StatusName.ToLower() == "declined"))
                                        {
                                            <a href="@Url.Action("DeleteRequestBlob", "Student", new { fileName = locStorage.FileName, fileID = locStorage.FileID })" class="btn btn-danger btn-block" onclick="return confirm('Are you sure you want to permanently delete this requirement?')">Delete</a>
                                        }

                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                </div>

            }
        }
    }

</div>
